package net.acprog.ide.configurations;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

import java.util.Map;

public class Component {
    private net.acprog.builder.project.Component parentComponent;

    public Component(net.acprog.builder.project.Component parentComponent) {
        this.parentComponent = parentComponent;
    }

    public Map<String, String> getProperties() {
        return this.parentComponent.getProperties();
    }

    public Map<String, String> getEvents() {
        return this.parentComponent.getEvents();
    }

    public Map<String, String> getAutogeneratedProperties() {
        return this.parentComponent.getAutogeneratedProperties();
    }

    public String getName() {
        return this.parentComponent.getName();
    }

    public void setName(String name) {
        this.parentComponent.setName(name);
    }

    public String getType() {
        return this.parentComponent.getType();
    }

    public void setType(String type) {
        this.parentComponent.setType(type);
    }

    public String getDescription() {
        return parentComponent.getDescription();
    }

    public void setDescription(String description) {
        parentComponent.setDescription(description);
    }

    public int getLeft() {
        return parentComponent.getLeft();
    }

    public void setLeft(int left) {
        parentComponent.setLeft(left);
    }

    public int getTop() {
        return parentComponent.getTop();
    }

    public void setTop(int top) {
        parentComponent.setTop(top);
    }

    public int getWidth() {
        return parentComponent.getWidth();
    }

    public void setWidth(int width) {
        parentComponent.setWidth(width);
    }

    public int getHeight() {
        return parentComponent.getHeight();
    }

    public void setHeight(int height) {
        parentComponent.setHeight(height);
    }

    public void readFromXml(Element xmlElement) {
        parentComponent.readFromXml(xmlElement);
    }

    public void saveToXml(Document doc, Element xmlComponent) {
        xmlComponent.setAttribute("top", Integer.toString(getTop()));
        xmlComponent.setAttribute("left", Integer.toString(getLeft()));
        xmlComponent.setAttribute("width", Integer.toString(getWidth()));
        xmlComponent.setAttribute("height", Integer.toString(getHeight()));

        Element xmlName = doc.createElement("name");
        xmlName.setTextContent(getName());
        xmlComponent.appendChild(xmlName);
        Element xmlType = doc.createElement("type");
        xmlType.setTextContent(getType());
        xmlComponent.appendChild(xmlType);
        if (getDescription() != null && getDescription().length() > 0) {
            Element xmlDescription = doc.createElement("description");
            xmlDescription.setTextContent(getDescription());
            xmlComponent.appendChild(xmlDescription);
        }

        Element xmlProperties = writeProperties(doc, doc.createElement("properties"));
        if(xmlProperties != null) {
            xmlComponent.appendChild(xmlProperties);
        }
        Element xmlEvents = writeEvents(doc, doc.createElement("events"));
        if(xmlEvents != null) {
            xmlComponent.appendChild(xmlEvents);
        }

    }

    private Element writeEvents(Document doc, Element xmlEvents) {
        if (getEvents().size() == 0) {
            return null;
        }
        for (Map.Entry<String, String> entry : getEvents().entrySet()) {
            Element xmlEvent = doc.createElement("event");
            xmlEvent.setAttribute("name", entry.getKey());
            xmlEvent.setTextContent(entry.getValue());
            xmlEvents.appendChild(xmlEvent);
        }
        return xmlEvents;
    }

    private Element writeProperties(Document doc, Element xmlProperties) {
        if (getProperties().size() == 0) {
            return null;
        }
        for (Map.Entry<String, String> entry : getProperties().entrySet()) {
            Element xmlProperty = doc.createElement("property");
            xmlProperty.setAttribute("name", entry.getKey());
            xmlProperty.setTextContent(entry.getValue());
            xmlProperties.appendChild(xmlProperty);
        }
        return xmlProperties;
    }

    public net.acprog.builder.project.Component getParentComponent() {
        return parentComponent;
    }
}
